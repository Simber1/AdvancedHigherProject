package uk.org.kelsohighschool.ps.program.servlets;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;

//servlet stuff
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

//my stuff
import uk.org.kelsohighschool.ps.program.db.Co2;
import uk.org.kelsohighschool.ps.program.db.DatabaseConnector;
import uk.org.kelsohighschool.ps.program.stuff.Sort;

/**
 * Servlet implementation class test
 */
@WebServlet(description = "Thing", urlPatterns = { "/co2" })
public class co2 extends HttpServlet {
	
	/**
	 * URL to connect to
	 */
	private String url = "jdbc:postgresql://localhost/outcometest";
	/**
	 * Username to login as
	 */
	private String username = "postgres";
	/**
	 * Password for login
	 */
	private String password = "postgres";
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public co2() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see javax.servlet.http.HttpServlet#doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		try {
	        Class.forName("org.postgresql.Driver"); //TO COMMENT
	    } catch (ClassNotFoundException e) {
	        // TODO Auto-generated catch block
	        e.printStackTrace();
	    } 
		
		response.getWriter().append("Served at: ").append(request.getContextPath());
		String sort = request.getParameter("sort"); //Sets sort to the part ?sort="" of the URL	
		
		if (sort == null){ //Defaults to old if there is no value
			sort = "old";
		}
		
		request.setAttribute("sort", sort); //TO COMMENT
		
		try { //autogenerated try catch to surround the DatabaseConnector
			DatabaseConnector dc = new DatabaseConnector(url,username,password); //TO COMMENT
			ArrayList<Co2> List1 = dc.getCo2();	//TO COMMENT
			//Getting size of db and passing to jsp
			Integer number_of_enteries = List1.size(); //TO COMMENT
			request.setAttribute("number_of_enteries", number_of_enteries); //TO COMMENT
			
			Integer x_in_min = 30000000; //Debug
			request.setAttribute("x_in_min", x_in_min); //TO COMMENT
			long x_in_secs = x_in_min * 60;
			
			long time1 = System.currentTimeMillis()/1000; //TO COMMENT
			request.setAttribute("time1", time1); //TO COMMENT
			
			ArrayList<Co2> results = dc.getCo2(); //TO COMMENT
			 
			int enteries_in_last_x = 0; //TO COMMENT
			
			for(int i=0;i< results.size();i++){ //TO COMMENT
				Co2 result = results.get(i);
				int ts = result.getTime();
				
				
				if(ts > time1 - x_in_secs){ //TO COMMENT
					enteries_in_last_x++;
				}
			}
			
			request.setAttribute("enteries_in_last_x", enteries_in_last_x); //TO COMMENT
			
			Integer enteries_not_in_last_x = number_of_enteries - enteries_in_last_x; //TO COMMENT
			request.setAttribute("enteries_not_in_last_x", enteries_not_in_last_x); //TO COMMENT
			dc.close();
			
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		try { //autogenerated try catch to surround the DatabaseConnector
			DatabaseConnector dc = new DatabaseConnector(url,username,password);
			ArrayList<Co2> this_working = dc.getCo2(); //TO COMMENT
			Sort ms = new Sort();
			ArrayList<Co2> sorted_list = ms.MySort(this_working,sort);
			request.setAttribute("test", sorted_list);
			dc.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} //TO COMMENT
			
		getServletContext().getRequestDispatcher("/jsp/index.jsp").forward(request,response); //TO COMMENT
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
